// =============================================================================
// Allan CORNET
// Copyright DIGITEO 2008 - 2010
// Copyright Scilab Enterprises 2017
// =============================================================================

function xls_linklib = loadXlsLinkToolbox()
    if getos() <> 'Windows' then
        error(_("Only for Windows."));
    end

    etc_tlbx = get_absolute_file_path('xls_link.start');
    etc_tlbx = getshortpathname(etc_tlbx);
    root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length('\etc\') );

    TOOLBOX_NAME  = "xls_link";
    TOOLBOX_TITLE = "xls link (Automation) for Scilab";
    mprintf("Start " + TOOLBOX_TITLE + "\n");

    // Load macros
    mprintf("\tLoad macros\n");
    pathmacros = fullfile(root_tlbx, "macros");
    xls_linklib = lib(pathmacros);

    // Load gateways
    orig_ilib_verbose = ilib_verbose();
    ilib_verbose(0);
    mprintf("\tLoad gateways\n");
    exec(fullfile(root_tlbx, "sci_gateway", "loader_gateway.sce"));
    ilib_verbose(orig_ilib_verbose);

    // Load demos
    if or(getscilabmode() == ["NW";"STD"]) then
        mprintf("\tLoad demos\n");
        pathdemos = fullfile(root_tlbx, "/demos/xls_link.dem.gateway.sce");
        add_demo(gettext("XLS Link"),pathdemos);
    end

    // Load and add help chapter
    if or(getscilabmode() == ["NW";"STD"]) then
        mprintf("\tLoad help\n");
        path_addchapter = pathconvert(root_tlbx+"/jar");
        if ( isdir(path_addchapter) <> [] ) then
            add_help_chapter("Xls link", path_addchapter, %F);
            clear add_help_chapter;
        end
    end


endfunction

xls_linklib = loadXlsLinkToolbox();
clear loadXlsLinkToolbox;


